#===============================================================================
# Move Users or accounts from One OU to another on basis of tags.
#
# (c) Enquizit, Inc 2019
# v1.0 2020-07-15
#================================================================================
AWSTemplateFormatVersion: '2010-09-09'
Description: Move Users or accounts from One OU to another on basis of tags. 
###################################################
#
# CloudFormation Interface Metadata
#
###################################################
Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Cloudwatch Logs Information
      Parameters:
      - pLambdaTiggerSchedular
    - Label:
        default: Organization Information
      Parameters:
      - pOrganizationUnitId
      
    ParameterLabels:
      pLambdaTiggerSchedular:
        default: Cron Job
      pOrganizationUnitId:      
        default: Qarantine OU Id
      
      
###################################################
#
# Template Parameter Definitions
#
###################################################
Parameters: 
   
  pLambdaTiggerSchedular:
    Type: String
    Default: cron(0 6 1 * ? *)
    Description: Enter Cron Job to schedule the lambda trigger time.
    
  pOrganizationUnitId:
    Type: String
    Default: "ou-hlvo-7vgmf82j"
    Description: Put Qarantine OU ID.

###################################################
#
# Template Resource Definitions
#
###################################################
  
Resources:

  # Custom lambda that Sets the cloudwatch Logs retention period
  rMoveUsers:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt rLambdaExRole.Arn
      Code: '../Lambdas/users_move_back_origin_ou'
      Runtime: python3.7
      Timeout: 240
      Environment:
        Variables:
          OU_ID : !Ref pOrganizationUnitId

      
 # Lambda execution Role
  rLambdaExRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: AWSAccountMovementPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:  
              - Effect: Allow
                Action:
                  - 'organizations:ListAccountsForParent'
                  - 'organizations:ListTagsForResource'
                  - 'organizations:UntagResource'
                  - 'organizations:MoveAccount'
                Resource: '*'
 

  # cloudwatch Rule to trigger the lambda function    
  rScheduledRuleForLambdaFunc: 
    Type: AWS::Events::Rule
    DependsOn: rMoveUsers
    Properties: 
      Description: "Scheduled Rule for export cloudwatch logs to s3 Bucket"
      ScheduleExpression: !Ref pLambdaTiggerSchedular
      State: ENABLED
      Targets: 
        - 
          Arn: !GetAtt rMoveUsers.Arn
          Id: 'Move-User'
            # Ref: pTargetId
            
            
            
  # Permission for events to invoke lambda function       
  rPermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    DependsOn: rMoveUsers
    Properties: 
      FunctionName: !Ref rMoveUsers
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt rScheduledRuleForLambdaFunc.Arn


