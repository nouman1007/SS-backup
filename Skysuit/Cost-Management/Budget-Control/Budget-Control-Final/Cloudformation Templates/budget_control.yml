#==============================================================================================
# Create EventBusEstablishTrust, permission Policies, Lambda function to put event permissions
# Get notification from member account through event bus and rule  will trigger the lambda.
#
# (c) Enquizit, Inc 2019
# v1.0 2020-07-15
#================================================================================

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cloudformation Template for the management account for the budget control
  solution

###################################################
#
# CloudFormation Interface Metadata
#
###################################################
Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Cloudwatch eve Information
      Parameters:
      - pLambdaTiggerSchedular
    - Label:
        default: Organization Unit Information
      Parameters:
      - pQuarantineOU
      
    ParameterLabels:
      pLambdaTiggerSchedular:
        default: Cron Job
      pQuarantineOU:      
        default: Qarantine OU Id

###################################################
#
# Template Parameter Definitions
#
###################################################

Parameters:

  pQuarantineOU:
    Type: String
    Description: Organization ID of the Quarantine OU
    
  pLambdaTiggerSchedular:
    Type: String
    Default: cron(0 6 1 * ? *)
    Description: Enter Cron Job to schedule the lambda trigger time.

###################################################
#
# Template Resource Definitions
#
###################################################

Resources:

  # IAM Permissions Policy for lambda function to Perform operations 
  rBudgetControlAWSOrganizationsPermissionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - organizations:ListParents
          - organizations:MoveAccount
          - organizations:DescribeOrganizationalUnit
          - organizations:ListAccountsForParent
          - organizations:UntagResource
          - organizations:TagResource
          - organizations:ListTagsForResource
          - ses:SendEmail
          Resource:'*'
  
  #lambda function
  rBudgetControlEventBridgeRuleTarget:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: '../Lambdas/budget_control_handler.py'
      Handler: budget_control_handler.lambda_handler
      Runtime: python3.8
      Description: Python function to handle eventbridge rule for budget control
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          QUARANTINE_OU:
            Ref: pQuarantineOU
      Policies:
      - AWSLambdaBasicExecutionRole
      - AWSLambda_ReadOnlyAccess
      - Ref: rBudgetControlAWSOrganizationsPermissionPolicy

  # cloudwatch Rule to trigger the lambda function
  rBudgetControlEventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        Fn::Join:
        - ''
        - - '{"source":["budget-control-solution"],'
          - '"detail-type":["Budget Threshold Breached"]'
          - '}'
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - rBudgetControlEventBridgeRuleTarget
          - Arn
        Id: BudgetControlLambdaTarget

  # Permission for events to invoke lambda function
  rBudgetControlEventBridgeRuleTargetInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - rBudgetControlEventBridgeRuleTarget
        - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - rBudgetControlEventBridgeRule
        - Arn

  # cloudwatch Rule to trigger the lambda function    
  rScheduledRuleForLambdaFunc: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "Scheduled Rule for "
      ScheduleExpression: !Ref pLambdaTiggerSchedular
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - rBudgetControlEventBridgeRuleTarget
          - Arn
        Id: BudgetControlLambda
            
            
  # Permission for events to invoke lambda function       
  rPermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - rBudgetControlEventBridgeRuleTarget
        - Arn
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt rScheduledRuleForLambdaFunc.Arn
